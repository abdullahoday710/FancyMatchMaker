// <auto-generated />
using System.Collections.Generic;
using GameService.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GameService.Migrations
{
    [DbContext(typeof(GameServiceDBContext))]
    [Migration("20250813093739_initialMatchHistoryEntry")]
    partial class initialMatchHistoryEntry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GameService.Entities.MatchHistoryEntry", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("MatchUUID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<long>>("ParticipatingPlayers")
                        .IsRequired()
                        .HasColumnType("bigint[]");

                    b.Property<long>("WinnerID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("MatchHistoryEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
